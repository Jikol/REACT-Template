// -----------------------------------------------------------------------------
// Stylesheet file for global styles and custom reset
// -----------------------------------------------------------------------------

@use "../helpers/mixins" as *;

/**
 * Inspiration for reset rules:
 * https://www.joshwcomeau.com/css/custom-css-reset/#the-css-reset
 * https://piccalil.li/blog/a-modern-css-reset/
 * https://github.com/jensimmons/cssremedy
 * https://github.com/thoughtbot/bitters
**/

/**
 * Remove default margin
**/
* {
  margin-block: 0;
  margin-inline: 0;
}

/**
 * Set up a usable box model without computed height and width with box model
**/
html,
body {
  height: 100%;
  max-height: 100vh;
}

/**
 * Set core root defaults
**/
html:focus-within {
  scroll-behavior: smooth;
}

/**
 * Add custom font size base and line height
 * Improve text rendering
 * Allow percentage-based heights in the application
**/
html {
  -webkit-font-smoothing: antialiased;
  hyphens: auto;
  /* stylelint-disable */
  text-rendering: optimizeSpeed;
  /* stylelint-enable */
}

/**
 * Improve media defaults
**/
img,
video,
canvas,
svg,
audio,
iframe,
embed,
object {
  display: block;
  max-width: 100%;
  vertical-align: middle;
}

audio:not([controls]) {
  display: none;
}

/**
 * Fix correct display for new picture element
**/
picture {
  display: contents;
}

source {
  display: none;
}

/**
 * Keep intrinsic aspect ratio
**/
img,
svg,
video,
canvas {
  height: auto;
}

/**
 * Fix static width of audio element
**/
audio {
  width: 100%;
}

/**
 * Remove built-in form typography styles
**/
input,
button,
textarea,
select {
  font: inherit;
}

/**
 * Avoid text overflows
**/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/**
 * Disable default behavior of links
**/
a {
  text-decoration: none;
}

/**
 * Define styled scrollbar for unified look with other elements
**/
*::-webkit-scrollbar {
  width: 8px;
  margin: 5px;
}

*::-webkit-scrollbar-track {
  background: inherit;
}

*::-webkit-scrollbar-thumb {
  border: 1px solid inherit;
  border-radius: 10px;
  background: #dfdfdf linear-gradient(to right, rgb(0 0 0 / 0%), rgb(0 0 0 / 20%));
}

@include mq-base {
  *::-webkit-scrollbar {
    width: 0;
  }
}

/**
 * Create a root stacking context for React root component
**/
#root {
  height: 100%;
  isolation: isolate;
}

/**
 * Disable blue highlight on touch devices for buttons and input
**/
button,
input {
  -webkit-tap-highlight-color: transparent;
}

/**
 * Remove all animations, transitions and smooth scroll for people that prefer not to see them
**/
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    scroll-behavior: auto !important;
    transition-duration: 0.01ms !important;
  }
}

/**
 * Maintain hidden behavior for overriding display value
**/
[hidden] {
  display: none;
}

/**
 * Disable overflow formatted text
**/
pre {
  white-space: pre-wrap;
}

/**
 * Reset for `button` type elements, inspired by bitters
**/

button,
[type="button"],
[type="reset"],
[type="submit"],
[role="button"] {
  display: inline-block;
  appearance: none;
  cursor: pointer;
  text-align: center;
  user-select: none;
  white-space: nowrap;

  &:disabled {
    cursor: not-allowed;
    opacity: 0.8;
  }

  &:focus-visible {
    outline: 2px solid hsl(0deg 0% 13%);
    outline-offset: 2px;
    transition: transform 0.1s;
    transform: scale(0.98);
  }
}

/**
 * Reset for `forms` type elements, inspired by bitters
**/

input,
textarea,
select,
[type="file"] {
  width: 100%;
  appearance: none;

  &:disabled {
    cursor: not-allowed;
  }
}

input[type="search"] {
  &::-webkit-search-cancel-button {
    width: 1.5em;
    height: 1.5em;
    background: url("../../public/svg/clear_icon.svg") no-repeat;
    background-size: contain;
    cursor: pointer;
    /* stylelint-disable */
    -webkit-appearance: none;
    /* stylelint-enable */
  }

  &.dark::-webkit-search-cancel-button {
    filter: invert(1);
  }

  &.dark + svg {
    filter: invert(1);
  }
}

textarea {
  resize: vertical;
}

/**
 * Reset for `table` type elements, inspired by bitters
**/

table {
  width: 100%;
  border-collapse: collapse;
  table-layout: fixed;
}

thead {
  vertical-align: bottom;
}

tbody {
  vertical-align: top;
}
